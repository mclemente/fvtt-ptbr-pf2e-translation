name: Release

env:
    package_type: module
    node_version: 22

on:
    release:
        types: [published]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Use Node.js ${{ env.node_version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.node_version }}

            - name: Install dependencies
              run: npm ci --cache .npm --prefer-offline

            - name: Extract tag version number
              id: get_version
              uses: battila7/get-version-action@v2

            - name: Substitute Manifest and Download Links For Versioned Ones
              id: sub_manifest_link_version
              uses: microsoft/variable-substitution@v1
              with:
                  files: "${{ env.package_type }}.json"
              env:
                  version: ${{ steps.get_version.outputs.version }}
                  url: https://github.com/${{ github.repository }}
                  manifest: https://github.com/${{ github.repository }}/releases/latest/download/${{ env.package_type }}.json
                  download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/${{ env.package_type }}.zip

            - name: Get current PF2 system from master branch
              run: |
                  mkdir pf2e
                  curl -L -o pf2e/archive.tar.gz https://api.github.com/repos/foundryvtt/pf2e/tarball/master
                  tar -xf pf2e/archive.tar.gz --strip-components=1 --directory pf2e

            - name: Create buildconfig.json for build script
              id: create-json
              uses: jsdaniell/create-json@v1.2.3
              with:
                  name: "buildconfig.json"
                  json: '{"buildPath": "./dist", "systemPath": "./pf2e"}'

            - name: Build release version
              run: |
                git submodule init
                git submodule update
                npm ci
                npm run build

            - name: Archive production artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: dist

    publish:
        needs:
            - build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download production artifacts for publication
              uses: actions/download-artifact@v4
              with:
                  name: dist
                  path: dist

            - name: Create zip file
              working-directory: ./dist
              run: zip -r ../${{ env.package_type }}.zip .

            - name: Create release
              id: create_version_release
              uses: ncipollo/release-action@v1
              with:
                  allowUpdates: true
                  name: ${{ github.event.release.name }}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  artifacts: "./dist/${{ env.package_type }}.json, ./${{ env.package_type }}.zip"
                  tag: ${{ github.event.release.tag_name }}
                  body: ${{ github.event.release.body }}

            - name: Get Module ID
              id: moduleID
              uses: notiz-dev/github-action-json-property@release
              with:
                  path: "./dist/${{ env.package_type }}.json"
                  prop_path: "id"

            - name: Get mininum
              id: minimum
              uses: notiz-dev/github-action-json-property@release
              with:
                  path: "./dist/${{ env.package_type }}.json"
                  prop_path: "compatibility.minimum"

            - name: Get verified
              id: verified
              uses: notiz-dev/github-action-json-property@release
              with:
                  path: "./dist/${{ env.package_type }}.json"
                  prop_path: "compatibility.verified"

            - name: Extract tag version number
              id: get_version
              uses: battila7/get-version-action@v2

            - name: Foundry Release API
              uses: fjogeleit/http-request-action@v1
              with:
                  url: "https://api.foundryvtt.com/_api/packages/release_version"
                  method: "POST"
                  customHeaders: '{"Content-Type": "application/json", "Authorization" : "${{ secrets.FOUNDRY_KEY }}"}'
                  data: '{"id": "${{ steps.moduleID.outputs.prop }}", "release": {"version": "${{ steps.get_version.outputs.version }}", "manifest": "https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/${{ env.package_type }}.json", "notes": "https://github.com/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }}/", "compatibility" : {"minimum": "${{ steps.minimum.outputs.prop }}", "verified": "${{ steps.verified.outputs.prop }}"}}}'
                  preventFailureOnNoResponse: true
